# #!/usr/bin/perl
snippet #!
	#!/usr/bin/perl
	
# Hash Pointer
snippet .
	 =>
# Function
snippet sub
	sub ${1:function_name} {
		${2:#body ...}
	}
# Conditional
snippet if
	if (${1}) 
	{
		${2:# body...}
	}
# Conditional if..else
snippet ife
	if (${1})
	{
		${2:# body...}
	}
	else
	{
		${3:# else...}
	}
# Conditional if..elsif..else
snippet ifee
	if (${1})
	{
		${2:# body...}
	}
	elsif (${3})
	{
		${4:# elsif...}
	}
	else
	{
		${5:# else...}
	}
# Conditional One-line
snippet xif
	${1:expression} if ${2:condition};${3}
# Unless conditional
snippet unless
	unless (${1})
	{
		${2:# body...}
	}
# Unless conditional One-line
snippet xunless
	${1:expression} unless ${2:condition};${3}
# Try/Except
snippet eval
	eval {
		${1:# do something risky...}
	};
	if (my $err = $@)
	{
		${2:# handle failure...}
	}
# While Loop
snippet wh
	while (${1})
	{
		${2:# body...}
	}
# While Loop One-line
snippet xwh
	${1:expression} while ${2:condition};${3}
# For Loop
snippet for
	for (my $${2:var} = 0; $$2 < ${1:count}; $$2${3:++})
	{
		${4:# body...}
	}
# Foreach Loop
snippet fore
	foreach my $${1:x} (@${2:array})
	{
		${3:# body...}
	}
# Foreach Loop One-line
snippet xfore
	${1:expression} foreach @${2:array};${3}
# Package
snippet cl
	package ${1:ClassName};

	use MooseX::Declare;
	use Method::Signatures::Modifiers

	class $1 { 
		our $VERSION = '0.01';
	
		${4:body...}

	}

	__END__

	=head1 NAME

	$1 - ${2:Cathphrase}.

	=head1 VERSION

	Version 0.01

	=head1 SYNOPSIS

	Quick summary of what the module does.

	Perhaps a little code snippet.

			use iseek::VISP;

			my $foo = iseek::VISP->new();
			...

	=head1 DESCRIPTION

	${3:Description}

	=head1 METHODS

	=head1 AUTHOR

	Christopher Mckay, C<< <cmckay at iseek.com.au> >>

	=head1 LICENSE AND COPYRIGHT

	Copyright 2011 iseek Communications.

	This program is released under the following license: restrictive
	
# Read File
snippet slurp
	my $${1:var};
	{ local $/ = undef; local *FILE; open FILE, "<${2:file}"; $$1 = <FILE>; close FILE }${3}
# Moose Declaration
snippet has
	has ${1:name} => (
	  is => '${2:ro}',
	  isa => '${3:Type}',
	  required => ${4:required},
	);
snippet pmmi
	__PACKAGE__->meta->make_immutable;
snippet mxd
	use MooseX::Declare;

	class ${1:name} {
		
	}

	__END__
snippet meth
	method ${1:name} (${2:Signature}) {

	}
snippet log
	my $log = Log::Log4perl->get_logger;
snippet errdie
	$log->error_die(${1:error});
snippet pod
	
	=head1 NAME

	${1:name} - ${2:description}

	=head1 VERSION

	Version ${3:version}

	=head1 SYNOPSIS

	=head1 METHODS

	=head1 AUTHOR

	Christopher Mckay, C<< <cmckay at iseek.com.au> >>
